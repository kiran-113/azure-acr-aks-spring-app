name: Build and Push Docker image to Azure ACR

on:
  push:
    branches:
      - main   # or your branch

env:
    WORK_DIR: ${{ github.workspace }}/spring-boot-mysql-docker-compose-main

#   push:
#     branches:
#       - main   # or your branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

       # ðŸ”¹ Set up JDK for Maven build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # ðŸ”¹ Cache Maven packages (speeds up builds)
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # ðŸ”¹ Run Maven build (creates JAR in target/)
      - name: Build with Maven
        working-directory: ${{ env.WORK_DIR }}
        run: mvn clean package -DskipTests

      # ðŸ”¹ Login to Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ðŸ”¹ Build and Push image
      - name: Build and Push to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}

      - name: Build Docker image
        working-directory: ${{ env.WORK_DIR }}
        run: |
          IMAGE_NAME=${{ secrets.ACR_NAME }}.azurecr.io/spring-boot-mysql-app
          docker build -t $IMAGE_NAME:${{ github.sha }} .
          docker push $IMAGE_NAME:${{ github.sha }}
          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest
