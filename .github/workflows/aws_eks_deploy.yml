name: EKS-Build and Deploy

on:
  push:
    branches:
      - aws-eks

env:
  WORK_DIR: ${{ github.workspace }}/spring-boot-mysql-docker-compose-main
  K8S_MANIFEST_DIR: ${{ github.workspace }}/spring-boot-mysql-docker-compose-main/k8s_manifest
  CLUSTER_NAME: "my_cluster"
  REPO_NAME: "dev-marketing"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - name: Checkout repo
        uses: actions/checkout@v4

      # Setup JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cache Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build JAR
      - name: Build with Maven
        working-directory: ${{ env.WORK_DIR }}
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ env.REPO_NAME }}
            IMAGE_TAG: "latest"

        run: |
            # Build a docker container and push it to ECR
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            echo "Pushing image to ECR..."
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Install and configure kubectl
        run: |
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
            --progress-bar \
            --location \
            --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

      - name: Configure AWS credentials_eks
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-south-1

      - name: Configure Kubectl
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ap-south-1

      - name: Deploy to EKS
        working-directory: ${{ env.K8S_MANIFEST_DIR }}
        run: |
            kubectl apply -f deployment.yaml
            kubectl apply -f service.yaml




