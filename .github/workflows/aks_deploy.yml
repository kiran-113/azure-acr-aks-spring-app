# name: AKS-Build and Deploy

# on:
#   push:
#     branches:
#       - main

# env:
#   WORK_DIR: ${{ github.workspace }}/spring-boot-mysql-docker-compose-main
#   IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/spring-boot-mysql-app
#   K8S_MANIFEST_DIR: ${{ github.workspace }}/spring-boot-mysql-docker-compose-main/k8s_manifest

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       # Setup JDK 17
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       # Cache Maven
#       - name: Cache Maven packages
#         uses: actions/cache@v4
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#           restore-keys: |
#             ${{ runner.os }}-maven-

#       # Build JAR
#       - name: Build with Maven
#         working-directory: ${{ env.WORK_DIR }}
#         run: mvn clean package -DskipTests

#       # Azure Login
#       - name: Azure Login
#         uses: azure/login@v2
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       # ACR Login
#       - name: ACR Login
#         uses: azure/docker-login@v2
#         with:
#           login-server: ${{ secrets.ACR_NAME }}.azurecr.io
#           username: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
#           password: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}

#       # Build & Push Docker Image
#       - name: Build and Push Docker image
#         working-directory: ${{ env.WORK_DIR }}
#         run: |
#           IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
#           echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
#           docker build -t $IMAGE_NAME:$IMAGE_TAG .
#           docker push $IMAGE_NAME:$IMAGE_TAG
#           echo "✅ Image pushed: $IMAGE_NAME:$IMAGE_TAG"

#        # Azure Login
#       - name: Azure Login
#         uses: azure/login@v2
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#        # Set AKS Context
#       - name: Set AKS Context
#         uses: azure/aks-set-context@v3
#         with:
#           cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
#           resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

#       # Deploy to AKS
#       - name: Deploy to AKS
#         working-directory: ${{ env.K8S_MANIFEST_DIR }}
#         run: |
#           echo "Deploying image $IMAGE_NAME:$IMAGE_TAG to AKS..."

#           # Ensure namespace exists
#           kubectl create namespace spring-mysql --dry-run=client -o yaml | kubectl apply -f -

#           # Replace image tag in manifest
#           sed -i "s|myacr.azurecr.io/spring-boot-mysql-app:latest|$IMAGE_NAME:$IMAGE_TAG|g" k8s_aks_app_deploy.yml

#           # Apply manifests
#           kubectl apply -f k8s_aks_app_deploy.yml -n spring-mysql
#           kubectl apply -f k8s_aks_db_deploy.yml -n spring-mysql

#           echo "Waiting for deployments to be ready..."
#           sleep 30
#           kubectl get all -n spring-mysql
#           echo "✅ Deployment completed."